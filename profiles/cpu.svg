<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>runtime.(*mspan).base (9 samples, 0.14%)</title><rect x="1133.3" y="133" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1136.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (4 samples, 0.06%)</title><rect x="529.8" y="245" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="532.76" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="1105.1" y="213" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1108.13" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirem (2 samples, 0.03%)</title><rect x="611.0" y="261" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="613.99" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock2 (4 samples, 0.06%)</title><rect x="883.8" y="181" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="886.78" y="191.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.02%)</title><rect x="1054.1" y="277" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1057.06" y="287.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.03%)</title><rect x="1001.7" y="133" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1004.72" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (6 samples, 0.09%)</title><rect x="1128.2" y="69" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.21" y="79.5" ></text>
</g>
<g >
<title>runtime.readUintptr (1 samples, 0.02%)</title><rect x="1138.8" y="133" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1141.75" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).dispose (1 samples, 0.02%)</title><rect x="1054.1" y="197" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1057.06" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (14 samples, 0.22%)</title><rect x="42.2" y="197" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="45.17" y="207.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (10 samples, 0.15%)</title><rect x="49.1" y="181" width="1.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="52.07" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.03%)</title><rect x="1041.9" y="213" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1044.89" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="253.0" y="165" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="255.98" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.06%)</title><rect x="252.3" y="149" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="255.25" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.02%)</title><rect x="216.8" y="149" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="219.81" y="159.5" ></text>
</g>
<g >
<title>runtime.goready (83 samples, 1.28%)</title><rect x="247.7" y="261" width="15.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="250.71" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.02%)</title><rect x="1041.2" y="133" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1044.16" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.11%)</title><rect x="217.7" y="229" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="220.72" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.02%)</title><rect x="65.1" y="213" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="68.07" y="223.5" ></text>
</g>
<g >
<title>runtime.putempty (3 samples, 0.05%)</title><rect x="1112.8" y="85" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1115.76" y="95.5" ></text>
</g>
<g >
<title>runtime.unlock2 (107 samples, 1.65%)</title><rect x="513.4" y="261" width="19.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="516.40" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (1 samples, 0.02%)</title><rect x="265.5" y="245" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="268.52" y="255.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.02%)</title><rect x="1162.7" y="245" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1165.74" y="255.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.02%)</title><rect x="992.8" y="213" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="995.82" y="223.5" ></text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.08%)</title><rect x="1116.4" y="69" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1119.40" y="79.5" ></text>
</g>
<g >
<title>runtime.goready (75 samples, 1.16%)</title><rect x="39.8" y="261" width="13.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="42.80" y="271.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (1 samples, 0.02%)</title><rect x="566.8" y="229" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="569.83" y="239.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.02%)</title><rect x="993.2" y="277" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="996.18" y="287.5" ></text>
</g>
<g >
<title>runtime.(*wbBuf).get2 (1 samples, 0.02%)</title><rect x="892.0" y="245" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="894.96" y="255.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.03%)</title><rect x="1127.8" y="53" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1130.85" y="63.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (107 samples, 1.65%)</title><rect x="513.4" y="277" width="19.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="516.40" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.03%)</title><rect x="992.6" y="245" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="995.64" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (4 samples, 0.06%)</title><rect x="1104.2" y="165" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1107.22" y="175.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.02%)</title><rect x="565.7" y="117" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="568.74" y="127.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.02%)</title><rect x="622.3" y="181" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="625.26" y="191.5" ></text>
</g>
<g >
<title>runtime.goready (17 samples, 0.26%)</title><rect x="614.3" y="261" width="3.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="617.27" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (22 samples, 0.34%)</title><rect x="1102.6" y="245" width="4.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1105.59" y="255.5" ></text>
</g>
<g >
<title>runtime.(*hmap).growing (1 samples, 0.02%)</title><rect x="18.9" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="21.90" y="303.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="26.4" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.36" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="993.0" y="293" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="996.00" y="303.5" ></text>
</g>
<g >
<title>runtime.funcdata (3 samples, 0.05%)</title><rect x="1124.6" y="85" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1127.58" y="95.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="615.7" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="618.72" y="191.5" ></text>
</g>
<g >
<title>runtime.(*bmap).overflow (2 samples, 0.03%)</title><rect x="18.5" y="293" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="21.54" y="303.5" ></text>
</g>
<g >
<title>runtime.chansend (178 samples, 2.74%)</title><rect x="863.4" y="277" width="32.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="866.42" y="287.5" >ru..</text>
</g>
<g >
<title>runtime.futexwakeup (5 samples, 0.08%)</title><rect x="1047.0" y="229" width="0.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1049.98" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="234.3" y="245" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="237.26" y="255.5" ></text>
</g>
<g >
<title>runtime.chanrecv (263 samples, 4.05%)</title><rect x="26.7" y="277" width="47.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="29.72" y="287.5" >runt..</text>
</g>
<g >
<title>runtime.casgstatus (41 samples, 0.63%)</title><rect x="1025.2" y="245" width="7.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1028.17" y="255.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="1004.4" y="165" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1007.45" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (83 samples, 1.28%)</title><rect x="247.7" y="245" width="15.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="250.71" y="255.5" ></text>
</g>
<g >
<title>runtime.wakep (11 samples, 0.17%)</title><rect x="48.9" y="197" width="2.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="51.89" y="207.5" ></text>
</g>
<g >
<title>strings.Index (16 samples, 0.25%)</title><rect x="1179.3" y="277" width="2.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1182.28" y="287.5" ></text>
</g>
<g >
<title>runtime.casgstatus (4 samples, 0.06%)</title><rect x="250.6" y="197" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="253.62" y="207.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="993.9" y="165" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="996.91" y="175.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (1 samples, 0.02%)</title><rect x="217.7" y="117" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="220.72" y="127.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.02%)</title><rect x="992.8" y="181" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="995.82" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (7 samples, 0.11%)</title><rect x="560.3" y="245" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="563.29" y="255.5" ></text>
</g>
<g >
<title>runtime.runqput (3 samples, 0.05%)</title><rect x="1041.3" y="229" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1044.34" y="239.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="994.8" y="181" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="997.82" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (10 samples, 0.15%)</title><rect x="253.2" y="165" width="1.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="256.16" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (1 samples, 0.02%)</title><rect x="566.7" y="149" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="569.65" y="159.5" ></text>
</g>
<g >
<title>runtime.chanrecv (230 samples, 3.54%)</title><rect x="594.8" y="277" width="41.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="597.82" y="287.5" >run..</text>
</g>
<g >
<title>runtime.mallocgc (15 samples, 0.23%)</title><rect x="216.8" y="277" width="2.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="219.81" y="287.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="1112.0" y="85" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1115.04" y="95.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (1,498 samples, 23.07%)</title><rect x="588.8" y="293" width="272.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="591.82" y="303.5" >runtime.chanrecv2</text>
</g>
<g >
<title>runtime.scanstack (55 samples, 0.85%)</title><rect x="995.2" y="213" width="10.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="998.18" y="223.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (15 samples, 0.23%)</title><rect x="266.8" y="245" width="2.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="269.79" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBits (5 samples, 0.08%)</title><rect x="1155.1" y="213" width="0.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1158.11" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.03%)</title><rect x="883.4" y="165" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="886.41" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (25 samples, 0.39%)</title><rect x="573.6" y="277" width="4.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="576.56" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.02%)</title><rect x="1003.5" y="165" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1006.54" y="175.5" ></text>
</g>
<g >
<title>strings.Count (63 samples, 0.97%)</title><rect x="1167.8" y="277" width="11.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1170.83" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (7 samples, 0.11%)</title><rect x="565.6" y="197" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="568.56" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="566.1" y="149" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="569.11" y="159.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.02%)</title><rect x="567.2" y="245" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.20" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (1 samples, 0.02%)</title><rect x="888.7" y="245" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="891.68" y="255.5" ></text>
</g>
<g >
<title>runtime.schedule (191 samples, 2.94%)</title><rect x="1013.9" y="277" width="34.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1016.90" y="287.5" >ru..</text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="892.0" y="197" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="894.96" y="207.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.02%)</title><rect x="561.0" y="213" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="564.02" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (7 samples, 0.11%)</title><rect x="217.7" y="197" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="220.72" y="207.5" ></text>
</g>
<g >
<title>strconv.parseFloatPrefix (318 samples, 4.90%)</title><rect x="934.7" y="277" width="57.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="937.66" y="287.5" >strcon..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="26.4" y="229" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="29.36" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (53 samples, 0.82%)</title><rect x="1035.0" y="261" width="9.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1037.98" y="271.5" ></text>
</g>
<g >
<title>runtime.bucketMask (8 samples, 0.12%)</title><rect x="22.5" y="293" width="1.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="25.54" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (176 samples, 2.71%)</title><rect x="1108.6" y="165" width="32.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1111.58" y="175.5" >ru..</text>
</g>
<g >
<title>runtime.futex (8 samples, 0.12%)</title><rect x="859.4" y="229" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="862.43" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="892.0" y="213" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="894.96" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="993.2" y="197" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="996.18" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.06%)</title><rect x="883.1" y="181" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="886.05" y="191.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="1054.1" y="229" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1057.06" y="239.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (2 samples, 0.03%)</title><rect x="616.8" y="181" width="0.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="619.81" y="191.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (6 samples, 0.09%)</title><rect x="1001.0" y="165" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1004.00" y="175.5" ></text>
</g>
<g >
<title>strconv.commonPrefixLenIgnoreCase (7 samples, 0.11%)</title><rect x="955.2" y="245" width="1.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="958.20" y="255.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (6 samples, 0.09%)</title><rect x="994.1" y="197" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="997.09" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.11%)</title><rect x="565.6" y="229" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="568.56" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (7 samples, 0.11%)</title><rect x="565.6" y="181" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="568.56" y="191.5" ></text>
</g>
<g >
<title>strconv.readFloat (177 samples, 2.73%)</title><rect x="956.5" y="245" width="32.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="959.47" y="255.5" >st..</text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.02%)</title><rect x="565.7" y="133" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="568.74" y="143.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.02%)</title><rect x="885.8" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="888.78" y="175.5" ></text>
</g>
<g >
<title>runtime.typedmemclr (18 samples, 0.28%)</title><rect x="65.2" y="261" width="3.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="68.25" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot (121 samples, 1.86%)</title><rect x="1109.3" y="149" width="22.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1112.31" y="159.5" >r..</text>
</g>
<g >
<title>runtime.getMCache (5 samples, 0.08%)</title><rect x="1079.3" y="261" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1082.32" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="884.3" y="165" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="887.32" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (13 samples, 0.20%)</title><rect x="530.5" y="229" width="2.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="533.49" y="239.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (7 samples, 0.11%)</title><rect x="619.7" y="261" width="1.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="622.72" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.02%)</title><rect x="561.4" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="564.38" y="223.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (8 samples, 0.12%)</title><rect x="1000.6" y="181" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1003.63" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (1 samples, 0.02%)</title><rect x="567.0" y="245" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="570.02" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.02%)</title><rect x="999.0" y="181" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1002.00" y="191.5" ></text>
</g>
<g >
<title>runtime.recv.goready.func1 (1 samples, 0.02%)</title><rect x="234.3" y="229" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="237.26" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="1127.5" y="69" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1130.48" y="79.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (2 samples, 0.03%)</title><rect x="39.3" y="261" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="42.26" y="271.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (1 samples, 0.02%)</title><rect x="262.8" y="261" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="265.79" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.02%)</title><rect x="217.2" y="165" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="220.18" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="999.2" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1002.18" y="191.5" ></text>
</g>
<g >
<title>runtime.gogo (6 samples, 0.09%)</title><rect x="1032.6" y="245" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1035.62" y="255.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.02%)</title><rect x="882.9" y="197" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="885.87" y="207.5" ></text>
</g>
<g >
<title>gcWriteBarrier (1 samples, 0.02%)</title><rect x="594.1" y="261" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="597.09" y="271.5" ></text>
</g>
<g >
<title>runtime.stackmapdata (1 samples, 0.02%)</title><rect x="1005.0" y="181" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1007.99" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (145 samples, 2.23%)</title><rect x="541.0" y="277" width="26.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="544.03" y="287.5" >r..</text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.02%)</title><rect x="26.4" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.36" y="255.5" ></text>
</g>
<g >
<title>runtime.bucketShift (1 samples, 0.02%)</title><rect x="24.0" y="293" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="26.99" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="566.8" y="245" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="569.83" y="255.5" ></text>
</g>
<g >
<title>runtime.checkTimers (4 samples, 0.06%)</title><rect x="1040.4" y="245" width="0.8" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1043.43" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (2 samples, 0.03%)</title><rect x="217.4" y="213" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="220.36" y="223.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.02%)</title><rect x="50.7" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="53.71" y="175.5" ></text>
</g>
<g >
<title>runtime.suspendG (1 samples, 0.02%)</title><rect x="218.4" y="133" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="221.45" y="143.5" ></text>
</g>
<g >
<title>runtime.memmove (60 samples, 0.92%)</title><rect x="625.7" y="245" width="10.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="628.72" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSlice (15 samples, 0.23%)</title><rect x="1156.0" y="213" width="2.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1159.02" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (835 samples, 12.86%)</title><rect x="683.1" y="245" width="151.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="686.14" y="255.5" >runtime.procyield</text>
</g>
<g >
<title>runtime.traceEnabled (1 samples, 0.02%)</title><rect x="53.3" y="213" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="56.25" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (12 samples, 0.18%)</title><rect x="258.4" y="197" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="261.43" y="207.5" ></text>
</g>
<g >
<title>runtime.add (19 samples, 0.29%)</title><rect x="19.1" y="293" width="3.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="22.09" y="303.5" ></text>
</g>
<g >
<title>runtime.runqget (10 samples, 0.15%)</title><rect x="1045.2" y="261" width="1.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1048.16" y="271.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="217.9" y="101" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="220.90" y="111.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.03%)</title><rect x="1130.9" y="117" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1133.94" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="257.3" y="165" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="260.34" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (2 samples, 0.03%)</title><rect x="1134.9" y="133" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1137.93" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (1 samples, 0.02%)</title><rect x="66.3" y="245" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="69.34" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="636.6" y="277" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="639.62" y="287.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.02%)</title><rect x="561.0" y="149" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="564.02" y="159.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (33 samples, 0.51%)</title><rect x="68.5" y="261" width="6.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="71.52" y="271.5" ></text>
</g>
<g >
<title>runtime.chanparkcommit (11 samples, 0.17%)</title><rect x="1011.9" y="277" width="2.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1014.90" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (9 samples, 0.14%)</title><rect x="1006.1" y="245" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1009.09" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (80 samples, 1.23%)</title><rect x="993.4" y="277" width="14.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="996.36" y="287.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (72 samples, 1.11%)</title><rect x="623.5" y="261" width="13.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="626.53" y="271.5" ></text>
</g>
<g >
<title>runtime.scanblock (14 samples, 0.22%)</title><rect x="1002.5" y="181" width="2.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1005.45" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.02%)</title><rect x="216.8" y="165" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="219.81" y="175.5" ></text>
</g>
<g >
<title>runtime.cheaprand (3 samples, 0.05%)</title><rect x="677.3" y="245" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="680.33" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (180 samples, 2.77%)</title><rect x="1108.0" y="213" width="32.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1111.04" y="223.5" >ru..</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="234.3" y="181" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="237.26" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.02%)</title><rect x="1104.8" y="149" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1107.77" y="159.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (18 samples, 0.28%)</title><rect x="995.4" y="197" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="998.36" y="207.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.02%)</title><rect x="1107.9" y="197" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1110.86" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (71 samples, 1.09%)</title><rect x="40.3" y="213" width="13.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="43.35" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (17 samples, 0.26%)</title><rect x="1102.8" y="229" width="3.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1105.77" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (1 samples, 0.02%)</title><rect x="1007.0" y="229" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1009.99" y="239.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (8 samples, 0.12%)</title><rect x="259.2" y="181" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="262.16" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.03%)</title><rect x="1053.3" y="245" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1056.34" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="1044.8" y="229" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1047.79" y="239.5" ></text>
</g>
<g >
<title>gcWriteBarrier (1 samples, 0.02%)</title><rect x="1108.4" y="165" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1111.40" y="175.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="614.8" y="165" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="617.81" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (8 samples, 0.12%)</title><rect x="858.0" y="245" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="860.97" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (7 samples, 0.11%)</title><rect x="886.3" y="197" width="1.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="889.32" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (5 samples, 0.08%)</title><rect x="565.9" y="165" width="0.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="568.92" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (7 samples, 0.11%)</title><rect x="615.9" y="197" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="618.90" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (179 samples, 2.76%)</title><rect x="1108.2" y="181" width="32.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1111.22" y="191.5" >ru..</text>
</g>
<g >
<title>runtime.futex (5 samples, 0.08%)</title><rect x="1047.0" y="213" width="0.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1049.98" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1107.9" y="165" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1110.86" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer).begin (30 samples, 0.46%)</title><rect x="319.7" y="245" width="5.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="322.68" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.03%)</title><rect x="1075.1" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1078.14" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="44.5" y="165" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="47.53" y="175.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="1041.2" y="213" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1044.16" y="223.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="888.3" y="261" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="891.32" y="271.5" ></text>
</g>
<g >
<title>runtime.runqput (2 samples, 0.03%)</title><rect x="615.4" y="197" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="618.36" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (15 samples, 0.23%)</title><rect x="216.8" y="293" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="219.81" y="303.5" ></text>
</g>
<g >
<title>runtime.releasem (5 samples, 0.08%)</title><rect x="578.1" y="277" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="581.10" y="287.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.03%)</title><rect x="992.6" y="277" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="995.64" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.06%)</title><rect x="1074.8" y="245" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1077.78" y="255.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="1112.2" y="85" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1115.22" y="95.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (254 samples, 3.91%)</title><rect x="532.8" y="293" width="46.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="535.85" y="303.5" >runt..</text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.02%)</title><rect x="567.0" y="261" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.02" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.02%)</title><rect x="216.8" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="219.81" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (118 samples, 1.82%)</title><rect x="1109.5" y="133" width="21.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1112.49" y="143.5" >r..</text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.02%)</title><rect x="218.1" y="117" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="221.09" y="127.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (29 samples, 0.45%)</title><rect x="561.6" y="261" width="5.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="564.56" y="271.5" ></text>
</g>
<g >
<title>runtime.runqputslow (2 samples, 0.03%)</title><rect x="47.1" y="181" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="50.07" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.03%)</title><rect x="1137.8" y="133" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1140.84" y="143.5" ></text>
</g>
<g >
<title>runtime.procyield (1,003 samples, 15.45%)</title><rect x="331.1" y="245" width="182.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="334.12" y="255.5" >runtime.procyield</text>
</g>
<g >
<title>runtime.funcdata (2 samples, 0.03%)</title><rect x="1002.1" y="181" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1005.09" y="191.5" ></text>
</g>
<g >
<title>strconv.atof32exact (59 samples, 0.91%)</title><rect x="944.5" y="245" width="10.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="947.48" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.02%)</title><rect x="561.0" y="85" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="564.02" y="95.5" ></text>
</g>
<g >
<title>runtime.memmove (34 samples, 0.52%)</title><rect x="567.4" y="277" width="6.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="570.38" y="287.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="995.0" y="181" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="998.00" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.03%)</title><rect x="615.0" y="165" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="617.99" y="175.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.02%)</title><rect x="1000.5" y="181" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1003.45" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="1133.1" y="133" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1136.12" y="143.5" ></text>
</g>
<g >
<title>runtime.recv (13 samples, 0.20%)</title><rect x="617.4" y="261" width="2.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="620.36" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (2 samples, 0.03%)</title><rect x="216.8" y="181" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="219.81" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (3 samples, 0.05%)</title><rect x="1052.8" y="245" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1055.79" y="255.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.02%)</title><rect x="944.3" y="197" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="947.30" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="217.9" y="85" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="220.90" y="95.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.02%)</title><rect x="1041.2" y="85" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1044.16" y="95.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (128 samples, 1.97%)</title><rect x="895.8" y="277" width="23.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="898.77" y="287.5" >r..</text>
</g>
<g >
<title>runtime.wbBufFlush (4 samples, 0.06%)</title><rect x="1074.8" y="261" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1077.78" y="271.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.02%)</title><rect x="1117.3" y="85" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1120.31" y="95.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.03%)</title><rect x="258.1" y="149" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="261.07" y="159.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.02%)</title><rect x="1135.3" y="133" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1138.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (4 samples, 0.06%)</title><rect x="1102.8" y="197" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1105.77" y="207.5" ></text>
</g>
<g >
<title>runtime.(*wbBuf).get1 (2 samples, 0.03%)</title><rect x="622.3" y="245" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="625.26" y="255.5" ></text>
</g>
<g >
<title>runtime.send.goready.func1 (26 samples, 0.40%)</title><rect x="882.9" y="229" width="4.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="885.87" y="239.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (3 samples, 0.05%)</title><rect x="1112.8" y="69" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1115.76" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="560.8" y="213" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="563.84" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.02%)</title><rect x="1140.6" y="165" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1143.57" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.02%)</title><rect x="1104.8" y="133" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1107.77" y="143.5" ></text>
</g>
<g >
<title>internal/bytealg.CountString (9 samples, 0.14%)</title><rect x="1177.6" y="261" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1180.64" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.05%)</title><rect x="216.8" y="229" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="219.81" y="239.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="1110.0" y="69" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1113.04" y="79.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (11 samples, 0.17%)</title><rect x="214.8" y="213" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="217.81" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (2 samples, 0.03%)</title><rect x="1105.3" y="213" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1108.31" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.03%)</title><rect x="258.1" y="165" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="261.07" y="175.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (158 samples, 2.43%)</title><rect x="185.9" y="293" width="28.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="188.92" y="303.5" >ru..</text>
</g>
<g >
<title>runtime.unlockWithRank (28 samples, 0.43%)</title><rect x="1048.6" y="277" width="5.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1051.61" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (2 samples, 0.03%)</title><rect x="1004.6" y="165" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1007.63" y="175.5" ></text>
</g>
<g >
<title>runtime.readvarint (2 samples, 0.03%)</title><rect x="1123.5" y="37" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1126.49" y="47.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.02%)</title><rect x="1162.7" y="181" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1165.74" y="191.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="234.3" y="261" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="237.26" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="594.1" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.09" y="239.5" ></text>
</g>
<g >
<title>runtime.send (11 samples, 0.17%)</title><rect x="888.5" y="261" width="2.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="891.50" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (14 samples, 0.22%)</title><rect x="42.2" y="181" width="2.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="45.17" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer).end (4 samples, 0.06%)</title><rect x="676.6" y="245" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="679.60" y="255.5" ></text>
</g>
<g >
<title>runtime.findfunc (3 samples, 0.05%)</title><rect x="997.0" y="181" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1000.00" y="191.5" ></text>
</g>
<g >
<title>runtime.recv.goready.func1 (75 samples, 1.16%)</title><rect x="39.8" y="229" width="13.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="42.80" y="239.5" ></text>
</g>
<g >
<title>brc/cmd.collectTokens (1,127 samples, 17.36%)</title><rect x="10.0" y="309" width="204.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >brc/cmd.collectTokens</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Load (1 samples, 0.02%)</title><rect x="1044.4" y="245" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1047.43" y="255.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.02%)</title><rect x="56.9" y="229" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="59.89" y="239.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.02%)</title><rect x="617.7" y="229" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="620.72" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (1,089 samples, 16.77%)</title><rect x="637.0" y="261" width="197.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="639.98" y="271.5" >runtime.lock2</text>
</g>
<g >
<title>runtime.typePointers.nextFast (1 samples, 0.02%)</title><rect x="1007.7" y="245" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1010.72" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.02%)</title><rect x="1041.2" y="101" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1044.16" y="111.5" ></text>
</g>
<g >
<title>runtime.traceEnabled (1 samples, 0.02%)</title><rect x="262.6" y="213" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="265.61" y="223.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.02%)</title><rect x="218.3" y="117" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="221.27" y="127.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (65 samples, 1.00%)</title><rect x="993.7" y="229" width="11.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="996.73" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack (98 samples, 1.51%)</title><rect x="1112.6" y="117" width="17.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1115.58" y="127.5" ></text>
</g>
<g >
<title>runtime.futexsleep (4 samples, 0.06%)</title><rect x="43.8" y="165" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="46.80" y="175.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (1 samples, 0.02%)</title><rect x="234.3" y="293" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="237.26" y="303.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.06%)</title><rect x="614.6" y="197" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="617.63" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (26 samples, 0.40%)</title><rect x="882.9" y="213" width="4.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="885.87" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="257.3" y="149" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="260.34" y="159.5" ></text>
</g>
<g >
<title>runtime.acquirem (8 samples, 0.12%)</title><rect x="538.5" y="277" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="541.48" y="287.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="892.0" y="165" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="894.96" y="175.5" ></text>
</g>
<g >
<title>runtime.suspendG (2 samples, 0.03%)</title><rect x="1005.2" y="213" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1008.18" y="223.5" ></text>
</g>
<g >
<title>runtime.(*inlineUnwinder).resolveInternal (1 samples, 0.02%)</title><rect x="1162.7" y="149" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1165.74" y="159.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.02%)</title><rect x="1054.1" y="293" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1057.06" y="303.5" ></text>
</g>
<g >
<title>runtime.mcall (254 samples, 3.91%)</title><rect x="1007.9" y="309" width="46.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1010.90" y="319.5" >runt..</text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="1041.2" y="117" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1044.16" y="127.5" ></text>
</g>
<g >
<title>runtime.unlock2 (143 samples, 2.20%)</title><rect x="834.9" y="261" width="26.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="837.89" y="271.5" >r..</text>
</g>
<g >
<title>runtime.send (36 samples, 0.55%)</title><rect x="263.0" y="261" width="6.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="265.97" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (1 samples, 0.02%)</title><rect x="217.2" y="181" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="220.18" y="191.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.02%)</title><rect x="218.1" y="101" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="221.09" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock2 (10 samples, 0.15%)</title><rect x="63.4" y="229" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="66.43" y="239.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="1041.2" y="229" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1044.16" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.02%)</title><rect x="566.3" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="569.29" y="159.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (2 samples, 0.03%)</title><rect x="217.4" y="245" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="220.36" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.02%)</title><rect x="561.0" y="117" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="564.02" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.02%)</title><rect x="1154.9" y="213" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1157.93" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (15 samples, 0.23%)</title><rect x="266.8" y="229" width="2.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="269.79" y="239.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (3 samples, 0.05%)</title><rect x="1127.7" y="69" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1130.67" y="79.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textOff (1 samples, 0.02%)</title><rect x="1113.9" y="85" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1116.85" y="95.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer).end (1 samples, 0.02%)</title><rect x="88.5" y="245" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="91.51" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1,312 samples, 20.21%)</title><rect x="275.0" y="261" width="238.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="277.97" y="271.5" >runtime.lock2</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.02%)</title><rect x="567.2" y="261" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="570.20" y="271.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (5 samples, 0.08%)</title><rect x="1047.0" y="261" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1049.98" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (8 samples, 0.12%)</title><rect x="103.0" y="245" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="106.05" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (2 samples, 0.03%)</title><rect x="1104.4" y="149" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1107.40" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="257.3" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="260.34" y="191.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="993.9" y="149" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="996.91" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.03%)</title><rect x="1140.2" y="149" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1143.20" y="159.5" ></text>
</g>
<g >
<title>indexbytebody (25 samples, 0.39%)</title><rect x="1184.5" y="261" width="4.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1187.55" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock2 (6 samples, 0.09%)</title><rect x="889.4" y="229" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="892.41" y="239.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (7 samples, 0.11%)</title><rect x="217.7" y="261" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="220.72" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.02%)</title><rect x="1105.1" y="197" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1108.13" y="207.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.02%)</title><rect x="944.3" y="229" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="947.30" y="239.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="234.3" y="213" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="237.26" y="223.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.02%)</title><rect x="594.3" y="277" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="597.28" y="287.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (5 samples, 0.08%)</title><rect x="1189.1" y="261" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.09" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="892.0" y="181" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="894.96" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (26 samples, 0.40%)</title><rect x="882.9" y="245" width="4.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="885.87" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (4 samples, 0.06%)</title><rect x="883.8" y="197" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="886.78" y="207.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.02%)</title><rect x="944.3" y="245" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="947.30" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.08%)</title><rect x="1047.0" y="245" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1049.98" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (1 samples, 0.02%)</title><rect x="1007.0" y="213" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1009.99" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="26.4" y="213" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="29.36" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (5 samples, 0.08%)</title><rect x="217.7" y="149" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="220.72" y="159.5" ></text>
</g>
<g >
<title>runtime.readyWithTime.goready.func1 (1 samples, 0.02%)</title><rect x="993.2" y="229" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="996.18" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Load (1 samples, 0.02%)</title><rect x="1103.3" y="133" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1106.31" y="143.5" ></text>
</g>
<g >
<title>gogo (1 samples, 0.02%)</title><rect x="992.5" y="309" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="995.45" y="319.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="997.5" y="165" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1000.54" y="175.5" ></text>
</g>
<g >
<title>runtime.scanblock (27 samples, 0.42%)</title><rect x="1125.1" y="85" width="4.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1128.12" y="95.5" ></text>
</g>
<g >
<title>runtime.acquirem (4 samples, 0.06%)</title><rect x="1078.6" y="261" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1081.60" y="271.5" ></text>
</g>
<g >
<title>strings.Split (734 samples, 11.30%)</title><rect x="1056.6" y="309" width="133.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1059.61" y="319.5" >strings.Split</text>
</g>
<g >
<title>runtime.gcBgMarkWorker (81 samples, 1.25%)</title><rect x="993.2" y="309" width="14.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="996.18" y="319.5" ></text>
</g>
<g >
<title>runtime.unlock2 (8 samples, 0.12%)</title><rect x="47.4" y="181" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="50.44" y="191.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (2 samples, 0.03%)</title><rect x="994.5" y="181" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="997.45" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pop (16 samples, 0.25%)</title><rect x="1037.3" y="245" width="3.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1040.34" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (3 samples, 0.05%)</title><rect x="1102.8" y="133" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1105.77" y="143.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (25 samples, 0.39%)</title><rect x="269.5" y="261" width="4.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="272.52" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack (3 samples, 0.05%)</title><rect x="217.9" y="133" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="220.90" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (7 samples, 0.11%)</title><rect x="217.7" y="245" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="220.72" y="255.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (11 samples, 0.17%)</title><rect x="214.8" y="229" width="2.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="217.81" y="239.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="621.0" y="261" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="623.99" y="271.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.02%)</title><rect x="565.7" y="101" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="568.74" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.03%)</title><rect x="1053.3" y="229" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1056.34" y="239.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (1 samples, 0.02%)</title><rect x="217.7" y="133" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="220.72" y="143.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (11 samples, 0.17%)</title><rect x="66.5" y="245" width="2.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="69.52" y="255.5" ></text>
</g>
<g >
<title>runtime.chanrecv.func1 (2 samples, 0.03%)</title><rect x="56.3" y="245" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="59.34" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (179 samples, 2.76%)</title><rect x="1108.2" y="197" width="32.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1111.22" y="207.5" >ru..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Load (1 samples, 0.02%)</title><rect x="1048.4" y="261" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1051.43" y="271.5" ></text>
</g>
<g >
<title>runtime.runqput (14 samples, 0.22%)</title><rect x="44.9" y="197" width="2.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="47.89" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.03%)</title><rect x="1041.9" y="245" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1044.89" y="255.5" ></text>
</g>
<g >
<title>runtime.casfrom_Gscanstatus (1 samples, 0.02%)</title><rect x="1112.4" y="101" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1115.40" y="111.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="889.2" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="892.23" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (12 samples, 0.18%)</title><rect x="88.7" y="245" width="2.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="91.69" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="561.0" y="133" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="564.02" y="143.5" ></text>
</g>
<g >
<title>runtime.semrelease (1 samples, 0.02%)</title><rect x="993.2" y="293" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="996.18" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.06%)</title><rect x="1102.8" y="165" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1105.77" y="175.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.02%)</title><rect x="1104.9" y="197" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1107.95" y="207.5" ></text>
</g>
<g >
<title>runtime.park_m (248 samples, 3.82%)</title><rect x="1008.6" y="293" width="45.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1011.63" y="303.5" >runt..</text>
</g>
<g >
<title>runtime.mallocgc (453 samples, 6.98%)</title><rect x="1080.8" y="261" width="82.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1083.78" y="271.5" >runtime.m..</text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="1041.2" y="245" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1044.16" y="255.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="993.2" y="261" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="996.18" y="271.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="1107.9" y="133" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1110.86" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.05%)</title><rect x="269.0" y="197" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="271.97" y="207.5" ></text>
</g>
<g >
<title>runtime.dropg (1 samples, 0.02%)</title><rect x="1008.4" y="293" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1011.45" y="303.5" ></text>
</g>
<g >
<title>runtime.scanblock (5 samples, 0.08%)</title><rect x="998.6" y="197" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1001.63" y="207.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.03%)</title><rect x="992.6" y="309" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="995.64" y="319.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (446 samples, 6.87%)</title><rect x="104.9" y="293" width="81.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="107.87" y="303.5" >runtime.m..</text>
</g>
<g >
<title>runtime.shrinkstack (2 samples, 0.03%)</title><rect x="1130.0" y="101" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1133.03" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (11 samples, 0.17%)</title><rect x="930.1" y="245" width="2.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="933.12" y="255.5" ></text>
</g>
<g >
<title>runtime.pcvalue (6 samples, 0.09%)</title><rect x="1001.0" y="149" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1004.00" y="159.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.02%)</title><rect x="1124.4" y="69" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1127.39" y="79.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.02%)</title><rect x="892.0" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="894.96" y="239.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.02%)</title><rect x="560.5" y="229" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="563.47" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (1 samples, 0.02%)</title><rect x="617.2" y="197" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="620.17" y="207.5" ></text>
</g>
<g >
<title>runtime.readgstatus (3 samples, 0.05%)</title><rect x="1005.5" y="245" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1008.54" y="255.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="247.5" y="261" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="250.53" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (2 samples, 0.03%)</title><rect x="1106.2" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1109.22" y="223.5" ></text>
</g>
<g >
<title>strings.genSplit (734 samples, 11.30%)</title><rect x="1056.6" y="293" width="133.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1059.61" y="303.5" >strings.genSplit</text>
</g>
<g >
<title>countbody (42 samples, 0.65%)</title><rect x="1170.0" y="261" width="7.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1173.01" y="271.5" ></text>
</g>
<g >
<title>aeshashbody (32 samples, 0.49%)</title><rect x="201.5" y="277" width="5.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="204.55" y="287.5" ></text>
</g>
<g >
<title>strconv.ParseFloat (332 samples, 5.11%)</title><rect x="932.1" y="293" width="60.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="935.12" y="303.5" >strcon..</text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.02%)</title><rect x="1106.6" y="245" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1109.58" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (4 samples, 0.06%)</title><rect x="1074.8" y="213" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1077.78" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.08%)</title><rect x="618.8" y="229" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="621.81" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.06%)</title><rect x="883.1" y="197" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="886.05" y="207.5" ></text>
</g>
<g >
<title>runtime.(*waitq).enqueue (1 samples, 0.02%)</title><rect x="26.5" y="277" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="29.54" y="287.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.02%)</title><rect x="561.0" y="101" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="564.02" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (8 samples, 0.12%)</title><rect x="884.5" y="197" width="1.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="887.50" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="218.1" y="69" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="221.09" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (2 samples, 0.03%)</title><rect x="1102.8" y="117" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1105.77" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.05%)</title><rect x="1044.6" y="245" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1047.61" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (6 samples, 0.09%)</title><rect x="889.4" y="245" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="892.41" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (89 samples, 1.37%)</title><rect x="74.7" y="277" width="16.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="77.70" y="287.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.02%)</title><rect x="217.7" y="101" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="220.72" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.02%)</title><rect x="1102.9" y="101" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1105.95" y="111.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Store (1 samples, 0.02%)</title><rect x="860.9" y="277" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="863.88" y="287.5" ></text>
</g>
<g >
<title>brc/cmd.readChunk (1,978 samples, 30.46%)</title><rect x="219.5" y="309" width="359.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="222.54" y="319.5" >brc/cmd.readChunk</text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="567.2" y="229" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="570.20" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.06%)</title><rect x="614.6" y="181" width="0.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="617.63" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (9 samples, 0.14%)</title><rect x="677.9" y="229" width="1.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="680.87" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="1054.1" y="261" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1057.06" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (3 samples, 0.05%)</title><rect x="216.8" y="245" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="219.81" y="255.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="993.2" y="213" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="996.18" y="223.5" ></text>
</g>
<g >
<title>runtime.runqput (13 samples, 0.20%)</title><rect x="255.2" y="197" width="2.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="258.16" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="1103.5" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.49" y="207.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (4 samples, 0.06%)</title><rect x="1109.5" y="117" width="0.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1112.49" y="127.5" ></text>
</g>
<g >
<title>brc/cmd.generateChunks (26 samples, 0.40%)</title><rect x="214.8" y="309" width="4.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="217.81" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (35 samples, 0.54%)</title><rect x="57.1" y="229" width="6.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="60.07" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="234.3" y="165" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="237.26" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="622.4" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="625.44" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (1 samples, 0.02%)</title><rect x="1040.3" y="245" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1043.25" y="255.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer).begin (16 samples, 0.25%)</title><rect x="673.7" y="245" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="676.69" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (46 samples, 0.71%)</title><rect x="910.7" y="245" width="8.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="913.67" y="255.5" ></text>
</g>
<g >
<title>runtime.futexsleep (9 samples, 0.14%)</title><rect x="677.9" y="245" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="680.87" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="1041.2" y="197" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1044.16" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (13 samples, 0.20%)</title><rect x="1102.8" y="213" width="2.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1105.77" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1,090 samples, 16.79%)</title><rect x="636.8" y="277" width="198.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="639.80" y="287.5" >runtime.lockWithRank</text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.02%)</title><rect x="1162.7" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1165.74" y="239.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.02%)</title><rect x="217.9" y="117" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="220.90" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="1007.4" y="229" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1010.36" y="239.5" ></text>
</g>
<g >
<title>aeshashbody (66 samples, 1.02%)</title><rect x="141.2" y="277" width="12.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="144.21" y="287.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.02%)</title><rect x="260.4" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="263.43" y="175.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (13 samples, 0.20%)</title><rect x="530.5" y="245" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="533.49" y="255.5" ></text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.02%)</title><rect x="944.3" y="213" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="947.30" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="561.0" y="181" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="564.02" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (4 samples, 0.06%)</title><rect x="1102.8" y="181" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1105.77" y="191.5" ></text>
</g>
<g >
<title>runtime.spanAllocType.manual (1 samples, 0.02%)</title><rect x="1103.1" y="117" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1106.13" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (4 samples, 0.06%)</title><rect x="1074.8" y="229" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1077.78" y="239.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (5 samples, 0.08%)</title><rect x="1031.7" y="229" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1034.71" y="239.5" ></text>
</g>
<g >
<title>strings.IndexByte (43 samples, 0.66%)</title><rect x="1182.2" y="277" width="7.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1185.19" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (7 samples, 0.11%)</title><rect x="565.6" y="213" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="568.56" y="223.5" ></text>
</g>
<g >
<title>runtime.semrelease (1 samples, 0.02%)</title><rect x="1107.9" y="213" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1110.86" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (27 samples, 0.42%)</title><rect x="882.7" y="261" width="4.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="885.69" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1104.0" y="149" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1107.04" y="159.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (3 samples, 0.05%)</title><rect x="40.3" y="197" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="43.35" y="207.5" ></text>
</g>
<g >
<title>runtime.alignUp (2 samples, 0.03%)</title><rect x="539.9" y="277" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="542.94" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend (192 samples, 2.96%)</title><rect x="239.2" y="277" width="34.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="242.17" y="287.5" >ru..</text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.08%)</title><rect x="997.7" y="165" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1000.73" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot (67 samples, 1.03%)</title><rect x="993.4" y="245" width="12.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="996.36" y="255.5" ></text>
</g>
<g >
<title>runtime.castogscanstatus (1 samples, 0.02%)</title><rect x="218.4" y="117" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="221.45" y="127.5" ></text>
</g>
<g >
<title>runtime.memmove (20 samples, 0.31%)</title><rect x="892.1" y="245" width="3.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="895.14" y="255.5" ></text>
</g>
<g >
<title>gcWriteBarrier (1 samples, 0.02%)</title><rect x="26.4" y="261" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="29.36" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (10 samples, 0.15%)</title><rect x="51.4" y="197" width="1.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="54.44" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.02%)</title><rect x="890.3" y="213" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="893.32" y="223.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.02%)</title><rect x="218.1" y="85" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="221.09" y="95.5" ></text>
</g>
<g >
<title>runtime.osyield (19 samples, 0.29%)</title><rect x="327.7" y="245" width="3.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="330.67" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.11%)</title><rect x="1055.3" y="309" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1058.33" y="319.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.02%)</title><rect x="1054.1" y="213" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1057.06" y="223.5" ></text>
</g>
<g >
<title>runtime.sendDirect (3 samples, 0.05%)</title><rect x="888.9" y="245" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="891.87" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.02%)</title><rect x="1041.2" y="181" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1044.16" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (21 samples, 0.32%)</title><rect x="1158.9" y="245" width="3.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1161.92" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.02%)</title><rect x="992.6" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="995.64" y="207.5" ></text>
</g>
<g >
<title>runtime.typedmemclr (13 samples, 0.20%)</title><rect x="621.2" y="261" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="624.17" y="271.5" ></text>
</g>
<g >
<title>runtime.sendDirect (6 samples, 0.09%)</title><rect x="265.7" y="245" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="268.70" y="255.5" ></text>
</g>
<g >
<title>runtime.getMCache (4 samples, 0.06%)</title><rect x="540.3" y="277" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="543.30" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1162.7" y="197" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1165.74" y="207.5" ></text>
</g>
<g >
<title>runtime.casgstatus (13 samples, 0.20%)</title><rect x="1009.5" y="277" width="2.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1012.54" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="619.5" y="213" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="622.54" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="218.6" y="149" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="221.63" y="159.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (3 samples, 0.05%)</title><rect x="1138.2" y="133" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1141.21" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (4 samples, 0.06%)</title><rect x="1105.9" y="229" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1108.86" y="239.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (1 samples, 0.02%)</title><rect x="992.8" y="197" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="995.82" y="207.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="217.9" y="69" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="220.90" y="79.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (12 samples, 0.18%)</title><rect x="1110.2" y="101" width="2.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1113.22" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock2 (75 samples, 1.16%)</title><rect x="90.9" y="261" width="13.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="93.87" y="271.5" ></text>
</g>
<g >
<title>brc/cmd.tokenizeString (2,275 samples, 35.04%)</title><rect x="579.0" y="309" width="413.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="582.01" y="319.5" >brc/cmd.tokenizeString</text>
</g>
<g >
<title>runtime.readUintptr (1 samples, 0.02%)</title><rect x="1158.7" y="229" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1161.74" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="1007.5" y="229" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1010.54" y="239.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (2 samples, 0.03%)</title><rect x="993.7" y="213" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="996.73" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).CompareAndSwap (1 samples, 0.02%)</title><rect x="561.2" y="213" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="564.20" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (2 samples, 0.03%)</title><rect x="1138.9" y="133" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1141.93" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.05%)</title><rect x="269.0" y="213" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="271.97" y="223.5" ></text>
</g>
<g >
<title>runtime.recv.goready.func1 (17 samples, 0.26%)</title><rect x="614.3" y="229" width="3.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="617.27" y="239.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (29 samples, 0.45%)</title><rect x="890.5" y="261" width="5.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="893.50" y="271.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.02%)</title><rect x="1054.1" y="245" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1057.06" y="255.5" ></text>
</g>
<g >
<title>runtime.isEmpty (2 samples, 0.03%)</title><rect x="104.5" y="293" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="107.50" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.08%)</title><rect x="257.5" y="181" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="260.52" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.02%)</title><rect x="257.9" y="165" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="260.89" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.05%)</title><rect x="1044.6" y="261" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1047.61" y="271.5" ></text>
</g>
<g >
<title>runtime.futexsleep (5 samples, 0.08%)</title><rect x="325.7" y="245" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="328.67" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.03%)</title><rect x="1041.9" y="229" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1044.89" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="993.2" y="165" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="996.18" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (4 samples, 0.06%)</title><rect x="622.8" y="245" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="625.81" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1,314 samples, 20.24%)</title><rect x="274.6" y="277" width="238.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="277.60" y="287.5" >runtime.lockWithRank</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.03%)</title><rect x="622.3" y="213" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="625.26" y="223.5" ></text>
</g>
<g >
<title>runtime.memequal (4 samples, 0.06%)</title><rect x="184.3" y="277" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="187.28" y="287.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (3 samples, 0.05%)</title><rect x="1112.8" y="101" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1115.76" y="111.5" ></text>
</g>
<g >
<title>runtime.gcDrain (80 samples, 1.23%)</title><rect x="993.4" y="261" width="14.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="996.36" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1,642 samples, 25.29%)</title><rect x="234.4" y="293" width="298.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="237.44" y="303.5" >runtime.chansend1</text>
</g>
<g >
<title>runtime.(*waitq).enqueue (1 samples, 0.02%)</title><rect x="863.2" y="277" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="866.24" y="287.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (7 samples, 0.11%)</title><rect x="261.2" y="197" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="264.16" y="207.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState.func1 (1 samples, 0.02%)</title><rect x="1140.9" y="181" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1143.93" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.03%)</title><rect x="992.6" y="261" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="995.64" y="271.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (8 samples, 0.12%)</title><rect x="1118.6" y="85" width="1.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1121.58" y="95.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.02%)</title><rect x="69.8" y="245" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="72.79" y="255.5" ></text>
</g>
<g >
<title>runtime.pcvalue (8 samples, 0.12%)</title><rect x="1122.6" y="53" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1125.58" y="63.5" ></text>
</g>
<g >
<title>runtime.lock2 (20 samples, 0.31%)</title><rect x="251.3" y="181" width="3.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="254.34" y="191.5" ></text>
</g>
<g >
<title>runtime.chansend1 (391 samples, 6.02%)</title><rect x="861.1" y="293" width="71.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="864.06" y="303.5" >runtime...</text>
</g>
<g >
<title>runtime.publicationBarrier (1 samples, 0.02%)</title><rect x="1162.9" y="245" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1165.92" y="255.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.03%)</title><rect x="679.5" y="245" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="682.51" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (18 samples, 0.28%)</title><rect x="679.9" y="245" width="3.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="682.87" y="255.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (2 samples, 0.03%)</title><rect x="1124.2" y="85" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1127.21" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (3 samples, 0.05%)</title><rect x="216.8" y="197" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="219.81" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (2 samples, 0.03%)</title><rect x="878.0" y="261" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="880.96" y="271.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (2 samples, 0.03%)</title><rect x="1130.9" y="133" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1133.94" y="143.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (23 samples, 0.35%)</title><rect x="1120.0" y="85" width="4.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1123.03" y="95.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (1 samples, 0.02%)</title><rect x="992.6" y="213" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="995.64" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="234.3" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="237.26" y="207.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.02%)</title><rect x="1104.0" y="133" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1107.04" y="143.5" ></text>
</g>
<g >
<title>runtime.resumeG (1 samples, 0.02%)</title><rect x="1112.4" y="117" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1115.40" y="127.5" ></text>
</g>
<g >
<title>runtime.tophash (1 samples, 0.02%)</title><rect x="214.6" y="293" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="217.63" y="303.5" ></text>
</g>
<g >
<title>runtime.ready (79 samples, 1.22%)</title><rect x="248.1" y="213" width="14.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="251.07" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (6 samples, 0.09%)</title><rect x="326.6" y="245" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="329.58" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (7 samples, 0.11%)</title><rect x="217.7" y="181" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="220.72" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="619.5" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="622.54" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).Add (3 samples, 0.05%)</title><rect x="260.6" y="197" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="263.61" y="207.5" ></text>
</g>
<g >
<title>runtime.cheaprand (1 samples, 0.02%)</title><rect x="1162.7" y="117" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1165.74" y="127.5" ></text>
</g>
<g >
<title>all (6,493 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>runtime.chanbuf (2 samples, 0.03%)</title><rect x="594.5" y="277" width="0.3" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="597.46" y="287.5" ></text>
</g>
<g >
<title>gcWriteBarrier (4 samples, 0.06%)</title><rect x="1074.8" y="277" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1077.78" y="287.5" ></text>
</g>
<g >
<title>memeqbody (171 samples, 2.63%)</title><rect x="153.2" y="277" width="31.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="156.21" y="287.5" >me..</text>
</g>
<g >
<title>runtime.(*lockTimer).end (3 samples, 0.05%)</title><rect x="325.1" y="245" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="328.13" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (5 samples, 0.08%)</title><rect x="617.9" y="229" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="620.90" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (127 samples, 1.96%)</title><rect x="896.0" y="261" width="23.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="898.95" y="271.5" >r..</text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.02%)</title><rect x="1003.7" y="165" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1006.72" y="175.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (4 samples, 0.06%)</title><rect x="1109.5" y="101" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1112.49" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (20 samples, 0.31%)</title><rect x="251.3" y="197" width="3.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="254.34" y="207.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (3 samples, 0.05%)</title><rect x="1109.7" y="85" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1112.67" y="95.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (5 samples, 0.08%)</title><rect x="257.5" y="197" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="260.52" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (49 samples, 0.75%)</title><rect x="1131.3" y="149" width="8.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1134.30" y="159.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).set (3 samples, 0.05%)</title><rect x="40.9" y="197" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="43.89" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (2 samples, 0.03%)</title><rect x="1121.8" y="53" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1124.85" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (84 samples, 1.29%)</title><rect x="1143.5" y="229" width="15.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1146.48" y="239.5" ></text>
</g>
<g >
<title>syscall.pread (11 samples, 0.17%)</title><rect x="214.8" y="261" width="2.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="217.81" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (8 samples, 0.12%)</title><rect x="859.4" y="245" width="1.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="862.43" y="255.5" ></text>
</g>
<g >
<title>runtime.readyWithTime.goready.func1 (1 samples, 0.02%)</title><rect x="1107.9" y="149" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1110.86" y="159.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (3 samples, 0.05%)</title><rect x="1080.2" y="261" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1083.23" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock2 (72 samples, 1.11%)</title><rect x="919.0" y="261" width="13.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="922.03" y="271.5" ></text>
</g>
<g >
<title>runtime.traceAcquire (1 samples, 0.02%)</title><rect x="262.4" y="213" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="265.43" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (508 samples, 7.82%)</title><rect x="1075.5" y="277" width="92.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1078.51" y="287.5" >runtime.mak..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.02%)</title><rect x="561.4" y="197" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="564.38" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="561.4" y="229" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="564.38" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="1041.2" y="165" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1044.16" y="175.5" ></text>
</g>
<g >
<title>runtime.send.goready.func1 (83 samples, 1.28%)</title><rect x="247.7" y="229" width="15.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="250.71" y="239.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.05%)</title><rect x="274.1" y="277" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="277.06" y="287.5" ></text>
</g>
<g >
<title>runtime.gcStart (2 samples, 0.03%)</title><rect x="1140.8" y="245" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1143.75" y="255.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (20 samples, 0.31%)</title><rect x="590.5" y="277" width="3.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="593.46" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.05%)</title><rect x="219.0" y="245" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="221.99" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (22 samples, 0.34%)</title><rect x="1163.1" y="261" width="4.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1166.10" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (7 samples, 0.11%)</title><rect x="565.6" y="245" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="568.56" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="1104.0" y="165" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1107.04" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="993.2" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="996.18" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (4 samples, 0.06%)</title><rect x="1102.8" y="149" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1105.77" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (75 samples, 1.16%)</title><rect x="90.9" y="277" width="13.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="93.87" y="287.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (2 samples, 0.03%)</title><rect x="993.7" y="197" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="996.73" y="207.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (10 samples, 0.15%)</title><rect x="1114.0" y="85" width="1.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1117.04" y="95.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (143 samples, 2.20%)</title><rect x="834.9" y="277" width="26.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="837.89" y="287.5" >r..</text>
</g>
<g >
<title>runtime.forEachG (2 samples, 0.03%)</title><rect x="1140.8" y="197" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1143.75" y="207.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (31 samples, 0.48%)</title><rect x="999.5" y="197" width="5.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1002.54" y="207.5" ></text>
</g>
<g >
<title>runtime.castogscanstatus (2 samples, 0.03%)</title><rect x="1130.6" y="101" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1133.57" y="111.5" ></text>
</g>
<g >
<title>runtime.recv (65 samples, 1.00%)</title><rect x="53.4" y="261" width="11.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="56.43" y="271.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (37 samples, 0.57%)</title><rect x="56.7" y="245" width="6.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="59.71" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (17 samples, 0.26%)</title><rect x="614.3" y="245" width="3.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="617.27" y="255.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (6 samples, 0.09%)</title><rect x="1054.2" y="309" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1057.24" y="319.5" ></text>
</g>
<g >
<title>runtime.acquirem (2 samples, 0.03%)</title><rect x="40.0" y="213" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="42.99" y="223.5" ></text>
</g>
<g >
<title>runtime.heapSetType (98 samples, 1.51%)</title><rect x="1141.1" y="245" width="17.8" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1144.11" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (89 samples, 1.37%)</title><rect x="74.7" y="261" width="16.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="77.70" y="271.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.02%)</title><rect x="1117.3" y="101" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1120.31" y="111.5" ></text>
</g>
<g >
<title>runtime.bgsweep (1 samples, 0.02%)</title><rect x="993.0" y="309" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="996.00" y="319.5" ></text>
</g>
<g >
<title>runtime.execute (73 samples, 1.12%)</title><rect x="1021.7" y="261" width="13.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1024.71" y="271.5" ></text>
</g>
<g >
<title>runtime.gopark (16 samples, 0.25%)</title><rect x="611.4" y="261" width="2.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="614.36" y="271.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (4 samples, 0.06%)</title><rect x="877.2" y="261" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="880.24" y="271.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (15 samples, 0.23%)</title><rect x="1121.5" y="69" width="2.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1124.49" y="79.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="1162.7" y="213" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1165.74" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (4 samples, 0.06%)</title><rect x="252.3" y="165" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="255.25" y="175.5" ></text>
</g>
<g >
<title>runtime.pcdatastart (1 samples, 0.02%)</title><rect x="1121.3" y="69" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1124.30" y="79.5" ></text>
</g>
<g >
<title>runtime.strhash (5 samples, 0.08%)</title><rect x="185.0" y="277" width="0.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="188.01" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (8 samples, 0.12%)</title><rect x="560.1" y="261" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="563.11" y="271.5" ></text>
</g>
<g >
<title>memeqbody (31 samples, 0.48%)</title><rect x="207.4" y="277" width="5.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="210.36" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.03%)</title><rect x="622.3" y="229" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="625.26" y="239.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="995.0" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="998.00" y="175.5" ></text>
</g>
<g >
<title>runtime.globrunqget (3 samples, 0.05%)</title><rect x="1041.3" y="245" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1044.34" y="255.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="1117.1" y="53" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1120.12" y="63.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.02%)</title><rect x="1103.7" y="197" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1106.68" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.02%)</title><rect x="992.6" y="181" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="995.64" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.02%)</title><rect x="217.5" y="197" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="220.54" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="234.3" y="149" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="237.26" y="159.5" ></text>
</g>
<g >
<title>runtime.chanrecv (1 samples, 0.02%)</title><rect x="234.3" y="277" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="237.26" y="287.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (1 samples, 0.02%)</title><rect x="1162.7" y="165" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1165.74" y="175.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (6 samples, 0.09%)</title><rect x="1103.9" y="197" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1106.86" y="207.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.03%)</title><rect x="1115.9" y="85" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1118.85" y="95.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).Load (1 samples, 0.02%)</title><rect x="1105.7" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1108.68" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (3 samples, 0.05%)</title><rect x="560.8" y="229" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="563.84" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="614.8" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="617.81" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (26 samples, 0.40%)</title><rect x="1049.0" y="261" width="4.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1051.97" y="271.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (5 samples, 0.08%)</title><rect x="1139.3" y="133" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1142.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (5 samples, 0.08%)</title><rect x="216.8" y="261" width="0.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="219.81" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).Add (3 samples, 0.05%)</title><rect x="50.9" y="197" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="53.89" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.02%)</title><rect x="217.0" y="165" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="220.00" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="1041.2" y="149" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1044.16" y="159.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (3 samples, 0.05%)</title><rect x="1021.2" y="261" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1024.17" y="271.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (1 samples, 0.02%)</title><rect x="566.5" y="149" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="569.47" y="159.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="74.5" y="277" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="77.52" y="287.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="1123.8" y="37" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1126.85" y="47.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.06%)</title><rect x="43.8" y="149" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="46.80" y="159.5" ></text>
</g>
<g >
<title>runtime.nanotime (7 samples, 0.11%)</title><rect x="1033.7" y="245" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1036.71" y="255.5" ></text>
</g>
<g >
<title>runtime.releasem (4 samples, 0.06%)</title><rect x="1167.1" y="261" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1170.10" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="1045.0" y="229" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1047.98" y="239.5" ></text>
</g>
<g >
<title>runtime.suspendG (3 samples, 0.05%)</title><rect x="1130.4" y="117" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1133.39" y="127.5" ></text>
</g>
<g >
<title>runtime.strhash (5 samples, 0.08%)</title><rect x="213.7" y="277" width="0.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="216.72" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (5 samples, 0.08%)</title><rect x="325.7" y="229" width="0.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="328.67" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (3 samples, 0.05%)</title><rect x="1006.4" y="229" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1009.45" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (4 samples, 0.06%)</title><rect x="41.4" y="197" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="44.44" y="207.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (2 samples, 0.03%)</title><rect x="1122.2" y="53" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1125.21" y="63.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="218.6" y="165" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="221.63" y="175.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (7 samples, 0.11%)</title><rect x="995.7" y="181" width="1.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="998.73" y="191.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (8 samples, 0.12%)</title><rect x="25.1" y="277" width="1.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="28.08" y="287.5" ></text>
</g>
<g >
<title>runtime.findmoduledatap (1 samples, 0.02%)</title><rect x="218.3" y="101" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="221.27" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.03%)</title><rect x="1140.8" y="229" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1143.75" y="239.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (2 samples, 0.03%)</title><rect x="1122.2" y="37" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1125.21" y="47.5" ></text>
</g>
<g >
<title>runtime.spanOf (4 samples, 0.06%)</title><rect x="1129.3" y="69" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1132.30" y="79.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (12 samples, 0.18%)</title><rect x="1110.2" y="117" width="2.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1113.22" y="127.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="561.0" y="197" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="564.02" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.05%)</title><rect x="1003.9" y="165" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1006.90" y="175.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue1 (1 samples, 0.02%)</title><rect x="1162.7" y="133" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1165.74" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.02%)</title><rect x="565.7" y="149" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="568.74" y="159.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (3 samples, 0.05%)</title><rect x="250.1" y="197" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="253.07" y="207.5" ></text>
</g>
<g >
<title>runtime.memequal (4 samples, 0.06%)</title><rect x="213.0" y="277" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="216.00" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (12 samples, 0.18%)</title><rect x="1042.3" y="245" width="2.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1045.25" y="255.5" ></text>
</g>
<g >
<title>runtime.(*waitq).enqueue (1 samples, 0.02%)</title><rect x="594.1" y="277" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="597.09" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.03%)</title><rect x="622.3" y="197" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="625.26" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="615.7" y="197" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="618.72" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (3 samples, 0.05%)</title><rect x="1047.9" y="261" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1050.88" y="271.5" ></text>
</g>
<g >
<title>syscall.Pread (11 samples, 0.17%)</title><rect x="214.8" y="277" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="217.81" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (2 samples, 0.03%)</title><rect x="1134.9" y="117" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1137.93" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="993.2" y="245" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="996.18" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointersChunked (3 samples, 0.05%)</title><rect x="219.0" y="261" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="221.99" y="271.5" ></text>
</g>
<g >
<title>runtime.sweepone (6 samples, 0.09%)</title><rect x="1103.9" y="181" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1106.86" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer).begin (3 samples, 0.05%)</title><rect x="910.1" y="245" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="913.13" y="255.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (2 samples, 0.03%)</title><rect x="1140.8" y="213" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1143.75" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.02%)</title><rect x="565.7" y="165" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="568.74" y="175.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.02%)</title><rect x="1054.1" y="309" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1057.06" y="319.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (69 samples, 1.06%)</title><rect x="1117.5" y="101" width="12.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1120.49" y="111.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (5 samples, 0.08%)</title><rect x="618.8" y="245" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="621.81" y="255.5" ></text>
</g>
<g >
<title>runtime.ready (16 samples, 0.25%)</title><rect x="614.4" y="213" width="3.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="617.45" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (25 samples, 0.39%)</title><rect x="70.0" y="245" width="4.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="72.97" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="561.0" y="165" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="564.02" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.02%)</title><rect x="565.7" y="85" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="568.74" y="95.5" ></text>
</g>
<g >
<title>runtime.gopark (24 samples, 0.37%)</title><rect x="878.3" y="261" width="4.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="881.33" y="271.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (4 samples, 0.06%)</title><rect x="887.6" y="261" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="890.59" y="271.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (7 samples, 0.11%)</title><rect x="1110.6" y="85" width="1.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1113.58" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (181 samples, 2.79%)</title><rect x="1107.9" y="229" width="32.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1110.86" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.unlockWithRank (8 samples, 0.12%)</title><rect x="47.4" y="197" width="1.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="50.44" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (75 samples, 1.16%)</title><rect x="39.8" y="245" width="13.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="42.80" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (7 samples, 0.11%)</title><rect x="217.7" y="213" width="1.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="220.72" y="223.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (3 samples, 0.05%)</title><rect x="1119.5" y="69" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1122.49" y="79.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="594.1" y="213" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="597.09" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="39.6" y="261" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="42.62" y="271.5" ></text>
</g>
<g >
<title>runtime.traceLocker.ok (2 samples, 0.03%)</title><rect x="1053.7" y="293" width="0.4" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1056.70" y="303.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (442 samples, 6.81%)</title><rect x="24.2" y="293" width="80.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="27.18" y="303.5" >runtime.c..</text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="44.7" y="197" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="47.71" y="207.5" ></text>
</g>
<g >
<title>runtime.sweepone (2 samples, 0.03%)</title><rect x="217.4" y="229" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="220.36" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).Add (2 samples, 0.03%)</title><rect x="886.0" y="197" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="888.96" y="207.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (3 samples, 0.05%)</title><rect x="885.4" y="181" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="888.41" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="1007.2" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1010.18" y="239.5" ></text>
</g>
<g >
<title>os.(*File).pread (11 samples, 0.17%)</title><rect x="214.8" y="293" width="2.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="217.81" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (3 samples, 0.05%)</title><rect x="216.8" y="213" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="219.81" y="223.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (2 samples, 0.03%)</title><rect x="993.7" y="181" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="996.73" y="191.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="1111.9" y="85" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1114.85" y="95.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.02%)</title><rect x="999.4" y="181" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1002.36" y="191.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.02%)</title><rect x="622.6" y="245" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="625.63" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (13 samples, 0.20%)</title><rect x="1135.5" y="133" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.48" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (80 samples, 1.23%)</title><rect x="993.4" y="293" width="14.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="996.36" y="303.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (6 samples, 0.09%)</title><rect x="1116.2" y="85" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1119.22" y="95.5" ></text>
</g>
<g >
<title>runtime.memmove (12 samples, 0.18%)</title><rect x="271.9" y="245" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="274.88" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="594.1" y="197" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="597.09" y="207.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.03%)</title><rect x="992.6" y="293" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="995.64" y="303.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="255.0" y="197" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="257.98" y="207.5" ></text>
</g>
<g >
<title>strconv.atof32 (310 samples, 4.77%)</title><rect x="936.1" y="261" width="56.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="939.12" y="271.5" >strco..</text>
</g>
<g >
<title>runtime.castogscanstatus (2 samples, 0.03%)</title><rect x="1005.2" y="197" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1008.18" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.02%)</title><rect x="594.1" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="597.09" y="255.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (6 samples, 0.09%)</title><rect x="997.5" y="181" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1000.54" y="191.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (22 samples, 0.34%)</title><rect x="1113.3" y="101" width="4.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1116.31" y="111.5" ></text>
</g>
<g >
<title>strconv.special (21 samples, 0.32%)</title><rect x="988.6" y="245" width="3.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="991.64" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (10 samples, 0.15%)</title><rect x="63.4" y="245" width="1.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="66.43" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="26.4" y="197" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="29.36" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachG (1 samples, 0.02%)</title><rect x="566.8" y="213" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="569.83" y="223.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (7 samples, 0.11%)</title><rect x="617.5" y="245" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="620.54" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.06%)</title><rect x="266.1" y="229" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="269.06" y="239.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.03%)</title><rect x="998.3" y="149" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1001.27" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.02%)</title><rect x="1102.8" y="101" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1105.77" y="111.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="622.4" y="181" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="625.44" y="191.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (187 samples, 2.88%)</title><rect x="1106.8" y="245" width="34.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1109.77" y="255.5" >ru..</text>
</g>
<g >
<title>runtime.(*unwinder).init (6 samples, 0.09%)</title><rect x="994.1" y="213" width="1.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="997.09" y="223.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (17 samples, 0.26%)</title><rect x="236.1" y="277" width="3.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="239.08" y="287.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.03%)</title><rect x="992.6" y="229" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="995.64" y="239.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.02%)</title><rect x="566.8" y="261" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="569.83" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (11 samples, 0.17%)</title><rect x="214.8" y="245" width="2.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="217.81" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (72 samples, 1.11%)</title><rect x="919.0" y="277" width="13.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="922.03" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (1 samples, 0.02%)</title><rect x="560.7" y="229" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="563.65" y="239.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="1107.9" y="181" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1110.86" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot (5 samples, 0.08%)</title><rect x="217.7" y="165" width="0.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="220.72" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalueCacheKey (1 samples, 0.02%)</title><rect x="1124.0" y="53" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1127.03" y="63.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.02%)</title><rect x="218.8" y="165" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="221.81" y="175.5" ></text>
</g>
</g>
</svg>
